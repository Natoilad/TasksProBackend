{
  "openapi": "3.0.1",
  "info": {
    "version": "2.0.2",
    "title": "Tasks pro",
    "description": "Showing off taskspro",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "servers": [{ "url": "http://localhost:4001" }],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Backgrounds",
      "description": "Backgrounds endpoints"
    },
    {
      "name": "Help",
      "description": "Help endpoints"
    },
    {
      "name": "Boards",
      "description": "Boards endpoints"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorBadRequestResponse"
                }
              }
            }
          },
          "409": {
            "description": "Email already in use",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorEmailInUse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User login",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Login's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorBadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Email or password invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorUnauthorized"
                }
              }
            }
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "User logout",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "204": {
            "description": "User signed out"
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorBadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorUnauthorized"
                }
              }
            }
          }
        }
      }
    },
    "/auth/current": {
      "get": {
        "tags": ["Auth"],
        "summary": "Get current user info",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Logged user returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/currentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorBadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorUnauthorized"
                }
              }
            }
          }
        }
      }
    },
    "/auth/theme": {
      "patch": {
        "tags": ["Auth"],
        "summary": "Change current user's theme",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Change theme's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeThemeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeThemeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorBadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorUnauthorized"
                }
              }
            }
          }
        }
      }
    },
    "/auth/avatars": {
      "patch": {
        "tags": ["Auth"],
        "summary": "Change user's avatar",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Change avatar's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAvatarRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateAvatarResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorBadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorUnauthorized"
                }
              }
            }
          }
        }
      }
    },
    "/auth/": {
      "put": {
        "tags": ["Auth"],
        "summary": "User update",
        "parameters": [
          {
            "in": "path",
            "name": "_id",
            "required": true,
            "type": "string",
            "description": "User's id"
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User update",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorBadRequestResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    },
    "/api/backgrounds": {
      "get": {
        "tags": ["Backgrounds"],
        "summary": "Get background images",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "List of background images",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BackgroundsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    },
    "/api/help": {
      "post": {
        "tags": ["Help"],
        "summary": "Send comment",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "User's message",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HelpRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Email send",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HelpResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorBadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorUnauthorized"
                }
              }
            }
          }
        }
      }
    },
    "/api/boards": {
      "post": {
        "tags": ["Boards"],
        "summary": "Create new board",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Add board",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddBoardRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Board is created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddBoardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorBadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorUnauthorized"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    }
  },

  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Ema"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "Ema@mail.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Ema"
          }
        },
        "example": { "email": "Ema@mail.com", "name": "Ema" }
      },
      "errorBadRequestResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "description": "Error status code",
            "example": 400
          },
          "message": {
            "type": "string",
            "description": "Error message",
            "example": "Bad request"
          }
        }
      },
      "errorEmailInUse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "description": "Error status code",
            "example": 409
          },
          "message": {
            "type": "string",
            "description": "Error message",
            "example": "Email already in use"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "Ema@mail.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "User's token",
            "example": "eyJhbGciOiJkpXVCJ9.eyJpZ"
          },
          "user": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              },
              "theme": {
                "type": "string",
                "description": "User's theme",
                "example": "dark"
              }
            }
          }
        },
        "example": {
          "token": "eyJhbGciOiJkpXVCJ9.eyJpZ",
          "user": {
            "email": "Ema@mail.com",
            "theme": "dark"
          }
        }
      },
      "errorUnauthorized": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "description": "Error status code",
            "example": 401
          },
          "message": {
            "type": "string",
            "description": "Error message",
            "example": "Email or password invalid"
          }
        }
      },
      "currentResponse": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Ema"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "Ema@mail.com"
          }
        }
      },
      "ChangeThemeRequest": {
        "type": "object",
        "required": ["theme"],
        "properties": {
          "theme": {
            "type": "string",
            "description": "User's theme",
            "enum": ["dark", "light", "violet"],
            "example": "dark"
          }
        }
      },
      "ChangeThemeResponse": {
        "type": "object",
        "properties": {
          "theme": {
            "type": "string",
            "description": "User's theme",
            "enum": ["dark", "light", "violet"],
            "example": "dark"
          }
        }
      },
      "UpdateAvatarRequest": {
        "type": "object",
        "required": ["avatarURL"],
        "properties": {
          "avatarURL": {
            "type": "string",
            "description": "User's avatar",
            "example": "avatar.png"
          }
        }
      },
      "UpdateAvatarResponse": {
        "type": "object",
        "properties": {
          "avatarURL": {
            "type": "string",
            "description": "User's avatar URL",
            "example": "http://res.cloudinary.com/avatar.jpg"
          }
        }
      },
      "UpdateUserResponse": {
        "type": "object",
        "required": ["_id"],
        "properties": {
          "_id": {
            "type": "string",
            "description": "User's id",
            "example": "649c08c274be8bde454dd728"
          },
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Ema"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "Ema@mail.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          },
          "theme": {
            "type": "string",
            "description": "User's theme",
            "enum": ["dark", "light", "violet"],
            "example": "dark"
          },
          "token": {
            "type": "string",
            "description": "User's token",
            "example": "eyJhbGciOiJkpXVCJ9.eyJpZ"
          },
          "avatarURL": {
            "type": "string",
            "description": "User's avatar URL",
            "example": "http://res.cloudinary.com/avatar.jpg"
          },
          "createdAt": {
            "type": "string",
            "description": "Created",
            "example": "2023-06-29T21:18:18.346Z"
          },
          "updatedAt": {
            "type": "string",
            "description": "Updated",
            "example": "2023-06-29T21:32:43.696Z"
          }
        }
      },
      "BackgroundsResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "desktop": {
              "type": "string",
              "description": "URL images for desktop",
              "example": "https://res.cloudinary.com/dt8rosz17/image/upload/c_scale,dpr_auto,w_auto/v1/bg/bgboard-10_t3nxak"
            },
            "tablet": {
              "type": "string",
              "description": "URL images for tablet",
              "example": "https://res.cloudinary.com/dt8rosz17/image/upload/c_scale,dpr_auto,w_auto/v1/bg/bgboard-10_t3nxak"
            },
            "mobile": {
              "type": "string",
              "description": "URL images for mobile",
              "example": "https://res.cloudinary.com/dt8rosz17/image/upload/c_scale,dpr_auto,w_auto/v1/bg/bgboard-10_t3nxak"
            }
          }
        },
        "example": [{}, {}, {}]
      },
      "HelpRequest": {
        "type": "object",
        "required": ["email", "comment"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "Ema@mail.com"
          },
          "comment": {
            "type": "string",
            "description": "User's message",
            "example": "I need help"
          }
        }
      },
      "HelpResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Email send",
            "example": "Email send"
          }
        }
      },
      "AddBoardRequest": {
        "type": "object",
        "required": ["title"],
        "properties": {
          "title": {
            "type": "string",
            "description": "Board's title",
            "example": "Project"
          }
        }
      },
      "AddBoardResponse": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Board's title",
            "example": "Project"
          },
          "icon": {
            "type": "string",
            "description": "Board's icon",
            "example": "none"
          },
          "background": {
            "type": "string",
            "description": "Board's background",
            "example": "none"
          },
          "owner": {
            "type": "string",
            "description": "Board's owner",
            "example": "649df51a76097dd89a5e683e"
          },
          "_id": {
            "type": "string",
            "description": "Board's _id",
            "example": "649ed254e11de14db5d22f9a"
          },
          "columns": {
            "type": "array",
            "example": "[]"
          }
        }
      },

      "securitySchemes": {
        "Bearer": {
          "type": "http",
          "scheme": "bearer",
          "bearerFormat": "JWT"
        }
      }
    }
  }
}
